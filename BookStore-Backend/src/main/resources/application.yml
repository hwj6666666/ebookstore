server:
  port: 8070
  address: 0.0.0.0
  servlet:
    session:
      cookie:
        #        same-site: none
        same-site: lax
        http-only: true
        #        secure: true
        secure: false
#  ssl:
#    key-store: classpath:keystore.p12
#    key-store-password: 123456
#    key-store-type: PKCS12
#    key-alias: tomcat
spring:
  cloud:
    compatibility-verifier:
      enabled: false
  application:
    name: bookstore-backend
  datasource:
    url: jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true
    username: root
    password: 123456
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    database: mysql
    show-sql: false
    open-in-view: true
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: bookstore
      auto-offset-reset: earliest
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      missing-topics-fatal: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  data:
    mongodb:
      uri: mongodb://root:123456@localhost:27017/bookstore
    redis:
      host: localhost
      port: 6666
      password: 123456
      timeout: 60000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: 123456

springdoc:
  api-docs:
    path: /api-docs

upload:
  directory: ./upload

logging:
  level:
    org.apache.kafka: WARN

eureka:
  instance:
    prefer-ip-address: true
    ip-address: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
